import java.util.ArrayList;
public class c {
public static void main(String[] args) 
{
    int[] arr = { 1,2,9,9,4,5};
    int[] arr2 = {5,6,7,8,9,1,2,3,4};

    // System.out.println(sortornot(arr, 0));
    // System.out.println(LSrec(arr, 87, 0));
    // System.out.println(find(arr, 87, 0));
    // find_all_index(arr, 9, 0);
    // System.out.println(list);
    // System.out.println(find_all_index2(arr, 9, 0, new ArrayList<>()));
    System.out.println(rbs(arr2, 8, 0, arr2.length-1));
    
}

//find if the array is sorted or not
static boolean sortornot(int[] arr, int index)
{   
    //base condn
    if(index == arr.length-1){return true;}
    
    return arr[index] < arr[index+1] && sortornot(arr, index+1);
       
}



//Linear Search in recursion
static int LSrec(int[] arr, int target, int i)
{   
    if(i == arr.length-1 && arr[i] != target){return -1;}
    if(arr[i] == target){return i ;}
    return LSrec(arr, target, i+1); 
}

//checking if no exists or not
static boolean find(int[] arr, int target, int i)
{
    if(i == arr.length){return false;}
    return arr[i]==target || find(arr, target, i+1);                    //it can't be i++
}


//if more than one target element occur
// static ArrayList<Integer> list = new ArrayList<>();
// static void find_all_index(int[] arr, int target, int i)
// {   

//     if(i == arr.length-1 && arr[i] != target){return ;}
//     if(arr[i] == target){list.add(i) ;}
//     find_all_index(arr, target, i+1);
// }


static ArrayList<Integer> find_all_index2(int[] arr, int target, int i, ArrayList<Integer> list)
{   
    if(i == arr.length-1 && arr[i] != target){return list;}
    if(arr[i] == target){list.add(i) ;}
    return find_all_index2(arr, target, i+1, list);
}

/*
VVI
Goal : return the list but don't take it in argument
 */
static ArrayList<Integer> find_all_index3(int[] arr, int target, int i)
{   
    ArrayList<Integer> list = new ArrayList<>();

    if(i == arr.length-1 && arr[i] != target){return list;}

    //this will contain answer to that function call only
    if(arr[i] == target){list.add(i) ;}

    ArrayList<Integer> ans_from_below_calls = find_all_index3(arr, target, i+1);
    list.addAll(ans_from_below_calls); //vvi function adding all lists from below function calls
    return list;    
}


//rotated BS
static int rbs(int[] arr, int target, int s, int e)
{
    if(s>e){ return -1;}

    int m = s + (e-s)/2;
    if(arr[m]==target){return m;}

    if(arr[s]<=arr[m]){
        if(target>=arr[s] && target<=arr[m]){return rbs(arr, target, s, m-1);} 
        else{return rbs(arr, target, m+1, e) ;}
    }

    if(target>= arr[m] && target<=arr[e]){
        return rbs(arr, target, m+1, e);
    }
    return rbs(arr, target, s, m-1);
   

}
 



    
}
