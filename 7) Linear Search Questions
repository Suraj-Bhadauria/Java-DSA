Q1. FIND MIN
public class FindMin {
    public static void main(String[] args) {
        int[] arr ={18,12,-7,3,14,28};
        System.out.println(min(arr));
    }


    //return the min element in the array
    static int min(int[] arr){
        int ans = arr[0];
        for(int i=1; i<arr.length; i++){
            if(arr[i]<ans){ans=arr[i];}
        }
        
        return ans;
    }
}



Q2. EVEN DIGITS
import java.util.Arrays;
import java.util.Scanner;

public class Q_even_digit{
    public static void main(String[] args) {
        int[] nums = {12,345,2,6,7896};
        //System.out.println(findnum(nums));
        System.out.println(digits(0));
        
    }

    static int findnum(int[] num){
        int count =0;
        for(int number: num){
            if(even(number)){count++;}
        }
        return count;
    }

    //function to check whether a number contains even number of digits
    static boolean even(int num){
        int number_of_digits = digits(num);
        if(number_of_digits%2==0){return true;}
        return false;

        // return number_of_digits%2==0; is the shortcut to write all lines above in a line
    }

    //count no of digits in a number
    static int digits(int num){
        if(num<0){
            num=num*-1;
        }

        if(num==0){
            return 1;    
        }
        int count =0;
        while(num>0){
            count++;
            num/=10;
        }
        return count;
    }


    //shortcut to find number of digits in a number
    static int digits2(int num){
        if(num<0){
            num=num*-1;
        }
        return (int)(Math.log10(num))+1;
    }

}



Q3. RICHEST PERSON
public class Q_richestPerson {
    public static void main(String[] args) {
        
    }

    static int max_wealth(int[][] accounts){
        //person = row
        //account = col
        int ans = Integer.MIN_VALUE;
        for(int person = 0; person<accounts.length; person++){
            int sum = 0;
            for(int account=0; account<accounts[person].length; account++){
                 sum+=accounts[person][account];    
            }

            //now we have sum of accounts of person
            //check with overall ans

            if(sum>ans){ans=sum; }
        }
        return ans;
    }
}





