import java.util.Arrays;

public class Searchin2Darray {
    public static void main(String[] args) {
        int [][] arr = {
            {2,56,7},
            {34,75,70,1,6},
            {66,89,24,67},
            {2,38},
        };

        int target = 34;
        int[] ans = search(arr, target); //format of return value -> {row, col}
        System.out.println(Arrays.toString(ans));
      System.out.println(max(arr));
    }


    //returns the row and column indices of that target element
    static int[] search(int[][] arr, int target){
        for(int row=0; row<arr.length; row++){
            for(int col=0; col<arr[row].length; col++){
                if(arr[row][col] == target){
                    return new int[]{row,col};
                    //using the 'new' keyword to declare the array 
                    //here only writing - return {row, col} doesn't tell compiler to return array
                    // thus, making an object of array
                    // and this is so obvious while declaring arrays that's why we don't use 'new'
                }
            }

        
        }
        return new int[]{-1, -1}; 
    }  


    static int max(int[][] arr){
        int max = Integer.MIN_VALUE ; //arr[0][0]; //getting minimum value of the array
        for(int row=0; row<arr.length; row++){
            for(int col=0; col<arr[row].length; col++){
                if(arr[row][col]>max){
                    max = arr[row][col];
           
                }
            }

        
        }
        return max;
    }  
}
